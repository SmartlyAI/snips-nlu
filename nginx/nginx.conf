worker_processes 2;

# Default, the limit will be set By the OS with ulimit -Sn
# Should be equal to `ulimit -n / worker_processes`
# because if process is not limited, we will have problem because one worker_process can consume all the open_files
worker_rlimit_nofile 512;

events {
  #
  # Determines how many clients will be served by each worker process.
  # (Max clients = worker_connections * worker_processes)
  # Should be equal to `ulimit -n / worker_processes`
  #
  worker_connections  512; 

  #
  # Let each process accept multiple connections.
  # Accept as many connections as possible, after nginx gets notification
  # about a new connection.
  # May flood worker_connections, if that option is set too low.
  #
  multi_accept on;
}

http {

  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 10;
  types_hash_max_size 2048;
  # server_tokens off;

  server_names_hash_bucket_size 128;
  server_names_hash_max_size 512;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;


  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # Default server CONFIG
  server {
    listen 80 default_server;
    server_name _;

    location /healthcheck {
        return 200 'gangnam style!';
    }
  }

  # Snips CONFIG
  server {
    listen 80;
    server_name nlu.smartly.ai;
    
    client_max_body_size 100M;

    location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_pass http://hestia:3000;
    }
  }

}